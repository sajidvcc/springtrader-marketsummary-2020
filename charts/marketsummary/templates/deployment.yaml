apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
    version: {{ .Values.version }}
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
    {{- if not .Values.mongodb.enabled }}
      annotations:
        vault.hashicorp.com/agent-init-first: "true"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "{{ .Release.Namespace }}"
        vault.hashicorp.com/agent-inject-secret-mongodb.json: "mongodb/creds/{{ .Release.Namespace }}"
        vault.hashicorp.com/agent-inject-template-mongodb.json: |
          {{ `{{` }}- with secret "mongodb/creds/{{ .Release.Namespace }}" -{{ `}}` }}
          {
            "username": "{{ `{{` }} .Data.username {{ `}}` }}",
            "password": "{{ `{{` }} .Data.password {{ `}}` }}"
          }
          {{ `{{` }}- end {{ `}}` }}
    {{- end }}
      labels:
        app: {{ .Chart.Name }}
        version: {{ .Values.version }}
    spec:
      initContainers:
        - name: check-mongodb-ready
          image: busybox:1.32
          command: ['sh', '-eu', '-c',
                    'until nc -vz ${DB_HOSTNAME} 27017; do echo "Waiting for mongo service"; sleep 2; done;']
          env:
            - name: DB_HOSTNAME
              value: {{ .Values.database.hostname }}
      {{- if .Values.mongodb.enabled }}
      volumes:
        - name: database-credentials
          configMap:
            name: database-credentials
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.image }}
        env:
        - name: OPENTRACING_JAEGER_SERVICE_NAME
          value: marketsummary.{{ .Release.Namespace }}
        - name: NODE_ENV
          value: {{ .Values.nodeEnv }}
        - name: DB_HOSTNAME
          value: {{ .Values.database.hostname }}
        - name: DB_DATABASE_NAME
          value: {{ .Values.database.databaseName }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.service.port }}
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.service.port }}
          initialDelaySeconds: 5
          periodSeconds: 5
        {{- if .Values.mongodb.enabled }}
        volumeMounts:
          - mountPath: /vault/secrets
            name: database-credentials
        {{- end }}
        resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
